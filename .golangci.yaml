linters:
  enable:
    # Check for pass []any as any in variadic func(...any).
    - asasalint

    # Only ascii for identifyer.
    - asciicheck

    # Checks for dangerous unicode character sequences.
    - bidichk

    # Check for two durations multiplied together.
    - durationcheck

    # Forces to not skip error check.
    - errcheck 

    # Checks `Err-` prefix for var and `-Error` suffix for error type.
    - errname

    # Checks for pointers to enclosing loop variables.
    - exportloopref

    # See article from the Author: https://olegk.dev/go-linters-configuration-the-right-version#clfs5vtp601m2ycnv2xpcfy9b
    - gocritic

    # Forces to put `.` at the end of the comment. Code is poetry.
    - godot

    # Formatting and imports.
    - gofmt
    - gofumpt
    - goimports
    - gci

    # Allow or ban replace directives in go.mod
    # or force explanation for retract directives.
    - gomoddirectives

    # Powerful security-oriented linter. But requires some time to
    # configure it properly, see https://github.com/securego/gosec#available-rules
    - gosec

    # Linter that specializes in simplifying code.
    - gosimple

    # Official Go tool. Must have. 
    - govet

    # Detects when assignments to existing variables are not used
    - ineffassign

    # Fix all the misspells, amazing thing.
    - misspell

    # Finds naked/bare returns and requires change them.
    - nakedret

    # Both require a bit more explicit returns.
    - nilerr
    - nilnil

    # Finds sending HTTP request without context.Context.
    - noctx

    # Forces comment why another check is disabled.
    # Better not to have //nolint: at all ;)
    - nolintlint

    # Finds shadowing of Go's predeclared identifiers.
    - predeclared

    # Lint your Prometheus metrics name.
    - promlinter

    # Checks that package variables are not reassigned.
    # Super rare case but can catch bad things (like `io.EOF = nil`)
    - reassign

    # Drop-in replacement of `golint`.
    - revive

    # Not the same as staticcheck binary :\
    - staticcheck

    # Is a replacement for `golint`, similar to `revive`.
    - stylecheck

    # Check struct tags.
    - tagliatelle

    # # Test-related checks. All of them are good.
    - tenv
    - testableexamples
    - thelper
    - tparallel

    # Remove unnecessary type conversions, make code cleaner
    - unconvert

    # Might be noisy but better to know what is unused
    - unparam

    # Must have. Finds unused declarations.
    - unused

    # Detect the possibility to use variables/constants from stdlib.
    - usestdlibvars

    # Finds wasted assignment statements.
    - wastedassign

    # Finds slices that could potentially be pre-allocated.
    # Minimal performance win by the cost of less readability and more complex code.
    # Not relevant to this repository (don't need performance optimization).
    - prealloc

linters-settings:
  gci:
    sections:
      - standard                       
      - default                        
      - prefix(github.com/theyoprst/adventofcode)
  gosec:
    excludes:
      - G404 # Insecure random number source (rand)

issues:
  exclude-rules:
  - path: \d+/main.go
    linters:
    - prealloc  # Does not require prealloc for actual solutions

disable:
    # Checks whether HTTP response body is closed successfully.
    # Not relevant to this repository.
    - bodyclose

    # Check whether the function uses a non-inherited context.
    # Not relevant to this repository.
    - contextcheck

    # Somewhat similar to `bodyclose` but for `database/sql` package.
    # Not relevant to this reposirory.
    - rowserrcheck
    - sqlclosecheck

    # Suggests to use `%w` for error-wrapping everywhere. IMO it is a bad practice leading to interface leaks.
    - errorlint

